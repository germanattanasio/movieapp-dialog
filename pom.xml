<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ibm.watson.app</groupId>
    <artifactId>movieapp-dialog</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>movieapp-dialog</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <skipITs>false</skipITs>
    </properties>

    <repositories>
        <repository>
            <id>Liberty</id>
            <name>Liberty Repository</name>
            <url>http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/maven/repository/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <warName>movieapp-dialog</warName>
                    <packagingExcludes>app/</packagingExcludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <!-- Add source directory for integration tests -->
                        <id>add-test-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <!-- Add resource directory for integration tests -->
                        <id>add-test-resource</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/it/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>0.0.23</version>

                <!-- add optional <configuration> here -->

                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>

                        <phase>generate-resources</phase>

                        <configuration>
                            <nodeVersion>v0.12.7</nodeVersion>
                            <npmVersion>2.7.6</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <phase>generate-resources</phase>

                        <configuration>
                            <!-- arguments here -->
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>gulp bower install</id>
                        <goals>
                            <goal>gulp</goal>
                        </goals>

                        <phase>generate-resources</phase>

                        <configuration>
                            <arguments>bower</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>gulp default build</id>
                        <goals>
                            <goal>gulp</goal>
                        </goals>

                        <phase>generate-resources</phase>
                        <configuration>
                            <!-- optional: if not specified, it will run gulp's default task (and you can remove this whole <configuration> section.) -->
                            <arguments>--target development</arguments>
                        </configuration>
                        <!-- configuration omitted, use gulp default -->
                    </execution>

                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.18.1</version>
                    <configuration>
                        <skipITs>${skipITs}</skipITs>
                        <systemPropertyVariables>
                            <app.url>${app.url}</app.url>
                            <automation.full.suite>${automation.full.suite}</automation.full.suite>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>Liberty</id>

            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <automation.full.suite>false</automation.full.suite>
                <app.url>http://localhost:${liberty.http.port}</app.url>
            </properties>

            <pluginRepositories>
                <pluginRepository>
                    <id>sonatype-nexus-snapshots</id>
                    <name>Sonatype Nexus Snapshots</name>
                    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                    <releases>
                        <enabled>false</enabled>
                    </releases>
                </pluginRepository>
            </pluginRepositories>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.9.1</version>
                        <executions>
                            <execution>
                                <!-- Reserve a random free port for the Liberty HTTP port -->
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>reserve-network-port</goal>
                                </goals>
                                <configuration>
                                    <portNames>
                                        <portName>liberty.http.port</portName>
                                    </portNames>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <!-- Liberty plugin for running integration tests without deploying to Bluemix. Installs Liberty if it doesn't already exist, 
                            creates a server if it doesn't already exist, starts the server and deploys the app, and stops the server after the integration tests complete. See 
                            https://github.com/WASdev/ci.maven -->
                        <groupId>net.wasdev.wlp.maven.plugins</groupId>
                        <artifactId>liberty-maven-plugin</artifactId>
                        <!-- Only the new SNAPSHOT releases support installing Liberty from the public repository -->
                        <version>1.2-SNAPSHOT</version>
                        <configuration>
                            <install>
                                <!-- Find the text after D/N on this page: http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/downloads/wlp/8.5.5.5/lafiles/runtime/en.html -->
                                <licenseCode>L-MCAO-9SYMVC</licenseCode>
                                <version>8.5.5_08</version>
                            </install>
                            <appArchive>${project.build.directory}/movieapp-dialog.war</appArchive>
                            <configFile>${basedir}/src/it/resources/server.xml</configFile>
                            <serverEnv>${basedir}/src/it/resources/server.env</serverEnv>
                            <skip>${skipITs}</skip>
                            <bootstrapProperties>
                                <!-- Corresponds to a variable reference in src/it/resources/server.xml -->
                                <httpPort>${liberty.http.port}</httpPort>
                            </bootstrapProperties>
                        </configuration>
                        <executions>

                            <execution>
                                <id>Start Liberty server and deploy app</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start-server</goal>
                                    <goal>deploy</goal>
                                </goals>
                            </execution>

                            <execution>
                                <id>Undeploy app and stop Liberty server</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>undeploy</goal>
                                    <goal>stop-server</goal>
                                </goals>
                            </execution>

                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                                <forkCount>100</forkCount>
        						<reuseForks>true</reuseForks>
                    			<parallel>methods</parallel>
                    			<useUnlimitedThreads>true</useUnlimitedThreads>
    					</configuration>
                        <executions>
                            <execution>
                                <id>Integration tests on local Liberty</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/failsafe-reports-liberty</reportsDirectory>
                                    <summaryFile>${project.build.directory}/failsafe-reports-liberty/failsafe-summary.xml</summaryFile>
                                    <excludes>
                                        <exclude>**/selenium/</exclude>
<!--                                         <exclude>**/rest/</exclude>  -->
                                    </excludes>
                                 </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Bluemix</id>

            <properties>
                <!-- User is required to specify the app name. Will be done automatically in CI. -->
                <bluemix.appname></bluemix.appname>
                <app.url>http://${bluemix.appname}.stage1.mybluemix.net</app.url>
                <automation.full.suite>true</automation.full.suite>
            </properties>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.cloudfoundry</groupId>
                        <artifactId>cf-maven-plugin</artifactId>
                        <version>1.1.1</version>
                        <configuration>
                            <server>bluemix-staging</server>
                            <target>https://api.stage1.ng.bluemix.net</target>

                            <org>Watson-Platform-CSF-Dev</org>
                            <space>WGA</space>

                            <appname>${bluemix.appname}</appname>
                        </configuration>
                        <executions>
                            <execution>
                                <id>deploy-to-staging</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>push-only</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop-app</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                            <!-- This execution is only defined here so 'mvn cf:login' can read the plugin configuration -->
                            <execution>
                                <goals>
                                    <goal>login</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>Integration tests on Bluemix</id>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <reportsDirectory>${project.build.directory}/failsafe-reports-bluemix</reportsDirectory>
                                    <summaryFile>${project.build.directory}/failsafe-reports-bluemix/failsafe-summary.xml</summaryFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>1.3.1</version>
                        <executions>
                            <execution>
                                <id>require-property</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireProperty>
                                            <property>bluemix.appname</property>
                                            <regex>.+</regex>
                                            <regexMessage>You must specify a unique
                                                application name via the bluemix.appname
                                                property when
                                                deploying to Bluemix.</regexMessage>
                                        </requireProperty>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- This profile is only activated when running in Eclipse. It doesn't affect the build itself- it only stores Eclipse m2e settings. -->
            <id>only-in-eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.codehaus.mojo</groupId>
                                                <artifactId>build-helper-maven-plugin</artifactId>
                                                <versionRange>[1.9.1,)</versionRange>
                                                <goals>
                                                    <goal>add-resource</goal>
                                                    <goal>add-test-source</goal>
                                                    <goal>add-test-resource</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore></ignore>
                                            </action>
                                        </pluginExecution>
                                        <!-- By default this plugin runs the gulp goal as part of incremental builds. In our development process, 
                                            a frontend developer will run 'gulp watch' in a separate shell while developing, and the Eclipse incremental builder will interfere with that. -->
                                        <!-- <pluginExecution> <pluginExecutionFilter> <groupId>com.github.eirslett</groupId> <artifactId>frontend-maven-plugin</artifactId> 
                                            <versionRange>[0.0.23,)</versionRange> <goals> <goal>gulp</goal> </goals> </pluginExecutionFilter> <action> <execute> <runOnIncremental>false</runOnIncremental> 
                                            </execute> </action> </pluginExecution> -->
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.ibm.tools.target</groupId>
            <artifactId>was-liberty</artifactId>
            <version>8.5.x.1</version>
            <type>pom</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>jsr311-api</artifactId>
            <version>1.1.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.13</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
            <version>4.3.2</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>1.4.0</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>2.3.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>2.46.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<dependency>
      		<groupId>com.google.code.gson</groupId>
      		<artifactId>gson</artifactId>
      		<version>2.3</version>
      		<scope>compile</scope>
    	</dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>
         <dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.10.19</version>
			<scope>test</scope>
		</dependency>
         <dependency>
         	<groupId>com.ibm.watson.developer_cloud</groupId>
         	<artifactId>java-sdk</artifactId>
         	<version>2.7.0</version>
         </dependency>
    </dependencies>
</project>
